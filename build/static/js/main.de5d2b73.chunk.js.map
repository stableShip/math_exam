{"version":3,"sources":["components/calculation.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Calculation","actions","useState","firstNum","setFirstNum","secondNum","setSecondNum","action","setAction","answer","setAnswer","isCorrect","setIsCorrect","inputRef","useRef","useEffect","generateNum","Form","useForm","form","_","random","onSubmit","value","correctAnswer","eval","parseInt","questions","JSON","parse","localStorage","getItem","setItem","stringify","resetFields","current","focus","onFinish","Item","name","rules","required","label","type","ref","Countdown","Statistic","App","correctNum","setCorrectNum","className","gutter","span","title","Date","now","format","suffix","console","log","filter","length","valueStyle","color","prefix","CheckOutlined","CloseOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de5d2b73.chunk.js","sourcesContent":["import { Statistic, Row, Col, Form, Input } from 'antd';\nimport { useEffect, useState, useRef } from 'react'\nimport _ from 'lodash'\n\n\nexport const Calculation = () => {\n    const actions = ['+', \"-\"]\n    const [firstNum, setFirstNum] = useState(0)\n    const [secondNum, setSecondNum] = useState(0)\n    const [action, setAction] = useState()\n    const [answer, setAnswer] = useState(0)\n    const [isCorrect, setIsCorrect] = useState(true)\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        generateNum()\n    }, [])\n\n    const [form] = Form.useForm();\n\n    function generateNum() {\n        setAction(actions[_.random(0, 1)])\n        setFirstNum(_.random(0, 999))\n        setSecondNum(_.random(0, 999))\n    }\n\n    function onSubmit(value) {\n        const {answer} = value\n        const correctAnswer = eval(`${firstNum + action + secondNum}`)\n        const isCorrect = parseInt(answer) === correctAnswer\n        setIsCorrect(isCorrect)\n        let questions = JSON.parse(localStorage.getItem(\"questions\") || '[]')\n        localStorage.setItem(\"questions\", JSON.stringify([...questions, {\n            firstNum,\n            secondNum,\n            isCorrect,\n            answer,\n            correctAnswer\n        }]))\n        form.resetFields()\n        generateNum()\n        inputRef.current.focus()\n    }\n\n    return (\n        <Form onFinish={onSubmit} form={form}>\n            <Form.Item name=\"answer\" rules={[{ required: true }]} label={`${firstNum + action + secondNum} = `}>\n                <Input type=\"number\" ref={inputRef} value={answer}></Input>\n            </Form.Item>\n        </Form>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState, useRef, useMemo } from 'react'\nimport { Statistic, Row, Col, Form, Input, Card } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Calculation } from './components/calculation'\nimport _ from 'lodash';\nconst { Countdown } = Statistic;\n\nconst App = () => {\n\n  const [correctNum, setCorrectNum] = useState(0)\n\n\n  function onFinish() {\n    console.log('finished!');\n    let questions = JSON.parse(localStorage.getItem(\"questions\") || '[]')\n    setCorrectNum(_.filter(questions, { isCorrect: true }).length)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Row gutter={16}>\n          <Col span={12}>\n            <Countdown title=\"倒计时\" value={Date.now() + 5 * 1000} format=\"mm:ss\" suffix=\"秒\" onFinish={onFinish} />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={12}>\n            <Calculation />\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={6}>\n            <Card>\n              <Statistic\n                title=\"正确： \"\n                value={correctNum}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<CheckOutlined />}\n              />\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card>\n              <Statistic\n                title=\"错误： \"\n                value={100 - correctNum}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<CloseOutlined />}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}